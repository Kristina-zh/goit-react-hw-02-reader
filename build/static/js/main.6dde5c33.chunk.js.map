{"version":3,"sources":["components/Reader/Reader.module.css","components/Reader/Controls/Controls.js","components/Reader/Counter/Counter.js","components/Reader/Publication/Publication.js","components/Reader/Reader.js","components/App/App.js","index.js"],"names":["module","exports","Controls","onIncrement","onDecrement","notActiveNext","notActivePrev","className","s","controls","disabled","onClick","type","button","Counter","count","max","counter","Publication","title","text","publication","Reader","state","setState","prevState","props","items","length","this","Component","App","publications","ReactDOM","render","document","getElementById"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,4BAA4B,QAAU,wBAAwB,SAAW,yBAAyB,OAAS,yB,kKC6B5JC,EA1BE,SAAC,GAAD,IACfC,EADe,EACfA,YACAC,EAFe,EAEfA,YACAC,EAHe,EAGfA,cACAC,EAJe,EAIfA,cAJe,OAMf,6BAASC,UAAWC,IAAEC,UACpB,4BACEC,SAAUJ,EACVK,QAASP,EACTQ,KAAK,SACLL,UAAWC,IAAEK,QAJf,kCAQA,4BACEH,SAAUL,EACVM,QAASR,EACTS,KAAK,SACLL,UAAWC,IAAEK,QAJf,0CCVWC,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAV,OACd,uBAAGT,UAAWC,IAAES,SACbF,EADH,IACWC,ICOEE,EATK,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAOI,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,KAAjB,OAClB,6BAASb,UAAWC,IAAEa,aACpB,4BACGN,EADH,IACWI,GAEX,2BAAIC,KCFaE,E,2MACnBC,MAAQ,CACNR,MAAO,G,EAaTZ,YAAc,WACZ,EAAKqB,UAAS,SAAAC,GACZ,GAAIA,EAAUV,MAAQ,EAAKW,MAAMC,MAAMC,OACrC,MAAO,CACLb,MAAOU,EAAUV,MAAQ,O,EAMjCX,YAAc,WACZ,EAAKoB,UAAS,SAAAC,GACZ,GAAIA,EAAUV,MAAQ,EACpB,MAAO,CACLA,MAAOU,EAAUV,MAAQ,O,wEAMvB,IACAA,EAAUc,KAAKN,MAAfR,MACAY,EAAUE,KAAKH,MAAfC,MACFX,EAAMW,EAAMC,OACZvB,EAAgBU,IAAUY,EAAMC,OAAS,EACzCtB,EAA0B,IAAVS,EAEtB,OACE,yBAAKR,UAAU,YACb,kBAAC,EAAD,CACEJ,YAAa0B,KAAK1B,YAClBC,YAAayB,KAAKzB,YAClBC,cAAeA,EACfC,cAAeA,IAEjB,kBAAC,EAAD,CAASS,MAAOA,EAAQ,EAAGC,IAAKA,IAChC,kBAAC,EAAD,CACED,MAAOA,EAAQ,EACfI,MAAOQ,EAAMZ,GAAOI,MACpBC,KAAMO,EAAMZ,GAAOK,Y,GAtDOU,a,OCKrBC,EANH,kBACV,oCACE,kBAAC,EAAD,CAAQJ,MAAOK,MCHnBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.6dde5c33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reader\":\"Reader_reader__cxwPY\",\"publication\":\"Reader_publication__9o6Je\",\"counter\":\"Reader_counter__yTH8_\",\"controls\":\"Reader_controls__1JZ80\",\"button\":\"Reader_button__8NTxS\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../Reader.module.css';\n\nconst Controls = ({\n  onIncrement,\n  onDecrement,\n  notActiveNext,\n  notActivePrev,\n}) => (\n  <section className={s.controls}>\n    <button\n      disabled={notActivePrev}\n      onClick={onDecrement}\n      type=\"button\"\n      className={s.button}\n    >\n      Назад\n    </button>\n    <button\n      disabled={notActiveNext}\n      onClick={onIncrement}\n      type=\"button\"\n      className={s.button}\n    >\n      Вперед\n    </button>\n  </section>\n);\n\nexport default Controls;\n","import React from 'react';\nimport s from '../Reader.module.css';\n\nconst Counter = ({ count, max }) => (\n  <p className={s.counter}>\n    {count}/{max}\n  </p>\n);\n\nexport default Counter;\n","import React from 'react';\nimport s from '../Reader.module.css';\n\nconst Publication = ({ count, title, text }) => (\n  <article className={s.publication}>\n    <h2>\n      {count}.{title}\n    </h2>\n    <p>{text}</p>\n  </article>\n);\n\nexport default Publication;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Controls from './Controls/Controls';\nimport Counter from './Counter/Counter';\nimport Publication from './Publication/Publication';\n\nexport default class Reader extends Component {\n  state = {\n    count: 0,\n  };\n\n  static propTypes = {\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        title: PropTypes.string,\n        text: PropTypes.string,\n      }),\n    ).isRequired,\n  };\n\n  onIncrement = () => {\n    this.setState(prevState => {\n      if (prevState.count < this.props.items.length) {\n        return {\n          count: prevState.count + 1,\n        };\n      }\n    });\n  };\n\n  onDecrement = () => {\n    this.setState(prevState => {\n      if (prevState.count > 0) {\n        return {\n          count: prevState.count - 1,\n        };\n      }\n    });\n  };\n\n  render() {\n    const { count } = this.state;\n    const { items } = this.props;\n    const max = items.length;\n    const notActiveNext = count === items.length - 1;\n    const notActivePrev = count === 0;\n\n    return (\n      <div className=\"s.reader\">\n        <Controls\n          onIncrement={this.onIncrement}\n          onDecrement={this.onDecrement}\n          notActiveNext={notActiveNext}\n          notActivePrev={notActivePrev}\n        />\n        <Counter count={count + 1} max={max} />\n        <Publication\n          count={count + 1}\n          title={items[count].title}\n          text={items[count].text}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Reader from '../Reader/Reader';\n\nimport publications from '../Reader/publications.json';\n\nconst App = () => (\n  <>\n    <Reader items={publications} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}